// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace apps.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20200610101341_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Affectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgentSi")
                        .HasColumnType("int");

                    b.Property<int>("IdCollaborateur")
                        .HasColumnType("int");

                    b.Property<int>("IdEmplacement")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAgentSi");

                    b.HasIndex("IdCollaborateur");

                    b.HasIndex("IdEmplacement");

                    b.HasIndex("IdEquipement");

                    b.ToTable("Affectations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "odit",
                            Date = new DateTime(2020, 5, 17, 6, 36, 49, 933, DateTimeKind.Local).AddTicks(9324),
                            IdAgentSi = 8,
                            IdCollaborateur = 6,
                            IdEmplacement = 7,
                            IdEquipement = 10
                        },
                        new
                        {
                            Id = 2,
                            Action = "cupiditate",
                            Date = new DateTime(2019, 7, 11, 2, 6, 56, 120, DateTimeKind.Local).AddTicks(5079),
                            IdAgentSi = 4,
                            IdCollaborateur = 2,
                            IdEmplacement = 4,
                            IdEquipement = 6
                        },
                        new
                        {
                            Id = 3,
                            Action = "sit",
                            Date = new DateTime(2019, 7, 8, 9, 36, 42, 609, DateTimeKind.Local).AddTicks(4024),
                            IdAgentSi = 9,
                            IdCollaborateur = 8,
                            IdEmplacement = 5,
                            IdEquipement = 8
                        },
                        new
                        {
                            Id = 4,
                            Action = "earum",
                            Date = new DateTime(2019, 11, 20, 5, 1, 10, 88, DateTimeKind.Local).AddTicks(2079),
                            IdAgentSi = 2,
                            IdCollaborateur = 10,
                            IdEmplacement = 8,
                            IdEquipement = 8
                        },
                        new
                        {
                            Id = 5,
                            Action = "earum",
                            Date = new DateTime(2019, 10, 26, 4, 38, 43, 699, DateTimeKind.Local).AddTicks(4150),
                            IdAgentSi = 7,
                            IdCollaborateur = 2,
                            IdEmplacement = 10,
                            IdEquipement = 2
                        },
                        new
                        {
                            Id = 6,
                            Action = "ut",
                            Date = new DateTime(2020, 1, 31, 9, 6, 5, 311, DateTimeKind.Local).AddTicks(1065),
                            IdAgentSi = 4,
                            IdCollaborateur = 3,
                            IdEmplacement = 2,
                            IdEquipement = 10
                        },
                        new
                        {
                            Id = 7,
                            Action = "sed",
                            Date = new DateTime(2020, 1, 17, 19, 26, 29, 145, DateTimeKind.Local).AddTicks(7538),
                            IdAgentSi = 10,
                            IdCollaborateur = 3,
                            IdEmplacement = 9,
                            IdEquipement = 1
                        },
                        new
                        {
                            Id = 8,
                            Action = "nobis",
                            Date = new DateTime(2020, 4, 21, 10, 58, 24, 617, DateTimeKind.Local).AddTicks(3477),
                            IdAgentSi = 10,
                            IdCollaborateur = 6,
                            IdEmplacement = 3,
                            IdEquipement = 1
                        },
                        new
                        {
                            Id = 9,
                            Action = "ad",
                            Date = new DateTime(2019, 6, 10, 16, 54, 55, 807, DateTimeKind.Local).AddTicks(2270),
                            IdAgentSi = 5,
                            IdCollaborateur = 5,
                            IdEmplacement = 6,
                            IdEquipement = 3
                        },
                        new
                        {
                            Id = 10,
                            Action = "quis",
                            Date = new DateTime(2020, 1, 27, 4, 38, 20, 164, DateTimeKind.Local).AddTicks(8520),
                            IdAgentSi = 10,
                            IdCollaborateur = 8,
                            IdEmplacement = 9,
                            IdEquipement = 2
                        });
                });

            modelBuilder.Entity("Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "consequuntur",
                            Nom = "consequatur"
                        },
                        new
                        {
                            Id = 2,
                            Description = "provident",
                            Nom = "consequatur"
                        },
                        new
                        {
                            Id = 3,
                            Description = "dolorum",
                            Nom = "perspiciatis"
                        },
                        new
                        {
                            Id = 4,
                            Description = "necessitatibus",
                            Nom = "ut"
                        },
                        new
                        {
                            Id = 5,
                            Description = "aut",
                            Nom = "vero"
                        },
                        new
                        {
                            Id = 6,
                            Description = "et",
                            Nom = "aliquam"
                        },
                        new
                        {
                            Id = 7,
                            Description = "dolor",
                            Nom = "numquam"
                        },
                        new
                        {
                            Id = 8,
                            Description = "error",
                            Nom = "accusamus"
                        },
                        new
                        {
                            Id = 9,
                            Description = "neque",
                            Nom = "cupiditate"
                        },
                        new
                        {
                            Id = 10,
                            Description = "aliquid",
                            Nom = "omnis"
                        });
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdReceiver")
                        .HasColumnType("int");

                    b.Property<int>("IdSender")
                        .HasColumnType("int");

                    b.Property<int>("IdTicketSupport")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdReceiver");

                    b.HasIndex("IdSender");

                    b.HasIndex("IdTicketSupport");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 1, 6, 10, 28, 52, 807, DateTimeKind.Local).AddTicks(7849),
                            IdReceiver = 3,
                            IdSender = 7,
                            IdTicketSupport = 1,
                            Message = "saepe",
                            Vu = true
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2019, 6, 29, 6, 50, 0, 831, DateTimeKind.Local).AddTicks(2007),
                            IdReceiver = 10,
                            IdSender = 3,
                            IdTicketSupport = 4,
                            Message = "ut",
                            Vu = true
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2019, 8, 11, 12, 52, 30, 591, DateTimeKind.Local).AddTicks(7848),
                            IdReceiver = 6,
                            IdSender = 3,
                            IdTicketSupport = 9,
                            Message = "autem",
                            Vu = true
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 3, 20, 12, 52, 1, 491, DateTimeKind.Local).AddTicks(8855),
                            IdReceiver = 4,
                            IdSender = 10,
                            IdTicketSupport = 3,
                            Message = "est",
                            Vu = true
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2019, 10, 1, 15, 0, 4, 779, DateTimeKind.Local).AddTicks(39),
                            IdReceiver = 4,
                            IdSender = 8,
                            IdTicketSupport = 7,
                            Message = "enim",
                            Vu = false
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2019, 12, 9, 10, 52, 51, 950, DateTimeKind.Local).AddTicks(2196),
                            IdReceiver = 2,
                            IdSender = 4,
                            IdTicketSupport = 6,
                            Message = "error",
                            Vu = false
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2020, 3, 13, 3, 29, 42, 20, DateTimeKind.Local).AddTicks(6063),
                            IdReceiver = 9,
                            IdSender = 10,
                            IdTicketSupport = 9,
                            Message = "enim",
                            Vu = false
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2019, 6, 29, 17, 58, 33, 845, DateTimeKind.Local).AddTicks(5314),
                            IdReceiver = 9,
                            IdSender = 8,
                            IdTicketSupport = 2,
                            Message = "deleniti",
                            Vu = false
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2019, 9, 29, 14, 54, 27, 529, DateTimeKind.Local).AddTicks(5038),
                            IdReceiver = 1,
                            IdSender = 10,
                            IdTicketSupport = 7,
                            Message = "libero",
                            Vu = false
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2020, 4, 6, 5, 49, 59, 315, DateTimeKind.Local).AddTicks(2145),
                            IdReceiver = 9,
                            IdSender = 5,
                            IdTicketSupport = 1,
                            Message = "dignissimos",
                            Vu = false
                        });
                });

            modelBuilder.Entity("Models.Constucteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Constucteurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "iure",
                            Nom = "rerum"
                        },
                        new
                        {
                            Id = 2,
                            Description = "recusandae",
                            Nom = "sunt"
                        },
                        new
                        {
                            Id = 3,
                            Description = "est",
                            Nom = "hic"
                        },
                        new
                        {
                            Id = 4,
                            Description = "veniam",
                            Nom = "expedita"
                        },
                        new
                        {
                            Id = 5,
                            Description = "nam",
                            Nom = "quis"
                        },
                        new
                        {
                            Id = 6,
                            Description = "qui",
                            Nom = "sunt"
                        },
                        new
                        {
                            Id = 7,
                            Description = "est",
                            Nom = "exercitationem"
                        },
                        new
                        {
                            Id = 8,
                            Description = "praesentium",
                            Nom = "quos"
                        },
                        new
                        {
                            Id = 9,
                            Description = "aut",
                            Nom = "laborum"
                        },
                        new
                        {
                            Id = 10,
                            Description = "ut",
                            Nom = "sed"
                        });
                });

            modelBuilder.Entity("Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Etage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Etage = "qui",
                            Nom = "ea"
                        },
                        new
                        {
                            Id = 2,
                            Etage = "sint",
                            Nom = "inventore"
                        },
                        new
                        {
                            Id = 3,
                            Etage = "voluptatem",
                            Nom = "quis"
                        },
                        new
                        {
                            Id = 4,
                            Etage = "aspernatur",
                            Nom = "voluptate"
                        },
                        new
                        {
                            Id = 5,
                            Etage = "quidem",
                            Nom = "velit"
                        },
                        new
                        {
                            Id = 6,
                            Etage = "error",
                            Nom = "sit"
                        },
                        new
                        {
                            Id = 7,
                            Etage = "ut",
                            Nom = "et"
                        },
                        new
                        {
                            Id = 8,
                            Etage = "accusamus",
                            Nom = "sunt"
                        },
                        new
                        {
                            Id = 9,
                            Etage = "placeat",
                            Nom = "est"
                        },
                        new
                        {
                            Id = 10,
                            Etage = "vel",
                            Nom = "soluta"
                        });
                });

            modelBuilder.Entity("Models.Emplacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeEmplacement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDepartement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartement");

                    b.ToTable("Emplacements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeEmplacement = "velit",
                            Description = "dolorem",
                            IdDepartement = 6
                        },
                        new
                        {
                            Id = 2,
                            CodeEmplacement = "non",
                            Description = "animi",
                            IdDepartement = 2
                        },
                        new
                        {
                            Id = 3,
                            CodeEmplacement = "a",
                            Description = "ratione",
                            IdDepartement = 5
                        },
                        new
                        {
                            Id = 4,
                            CodeEmplacement = "quo",
                            Description = "id",
                            IdDepartement = 6
                        },
                        new
                        {
                            Id = 5,
                            CodeEmplacement = "corporis",
                            Description = "natus",
                            IdDepartement = 3
                        },
                        new
                        {
                            Id = 6,
                            CodeEmplacement = "non",
                            Description = "aspernatur",
                            IdDepartement = 9
                        },
                        new
                        {
                            Id = 7,
                            CodeEmplacement = "sint",
                            Description = "totam",
                            IdDepartement = 5
                        },
                        new
                        {
                            Id = 8,
                            CodeEmplacement = "qui",
                            Description = "labore",
                            IdDepartement = 10
                        },
                        new
                        {
                            Id = 9,
                            CodeEmplacement = "unde",
                            Description = "alias",
                            IdDepartement = 3
                        },
                        new
                        {
                            Id = 10,
                            CodeEmplacement = "quia",
                            Description = "laudantium",
                            IdDepartement = 10
                        });
                });

            modelBuilder.Entity("Models.Equipement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<string>("EtatActuel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategorie")
                        .HasColumnType("int");

                    b.Property<int>("IdConstucteur")
                        .HasColumnType("int");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int");

                    b.Property<int>("IdStatut")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NInventaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrixUnitaireHT")
                        .HasColumnType("int");

                    b.Property<string>("RefAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarques")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("IdConstucteur");

                    b.HasIndex("IdFournisseur");

                    b.HasIndex("IdStatut");

                    b.ToTable("Equipements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAchat = new DateTime(2019, 8, 30, 1, 36, 38, 138, DateTimeKind.Local).AddTicks(4754),
                            EtatActuel = "suscipit",
                            IdCategorie = 5,
                            IdConstucteur = 7,
                            IdFournisseur = 4,
                            IdStatut = 3,
                            Model = "non",
                            NInventaire = "iure",
                            NSerie = "omnis",
                            PrixUnitaireHT = 9,
                            RefAchat = "debitis",
                            Remarques = "dolores"
                        },
                        new
                        {
                            Id = 2,
                            DateAchat = new DateTime(2020, 2, 28, 12, 37, 16, 838, DateTimeKind.Local).AddTicks(5727),
                            EtatActuel = "ab",
                            IdCategorie = 3,
                            IdConstucteur = 1,
                            IdFournisseur = 2,
                            IdStatut = 8,
                            Model = "quia",
                            NInventaire = "eaque",
                            NSerie = "et",
                            PrixUnitaireHT = 8,
                            RefAchat = "eos",
                            Remarques = "et"
                        },
                        new
                        {
                            Id = 3,
                            DateAchat = new DateTime(2019, 7, 16, 0, 27, 52, 8, DateTimeKind.Local).AddTicks(9441),
                            EtatActuel = "dolorem",
                            IdCategorie = 1,
                            IdConstucteur = 7,
                            IdFournisseur = 8,
                            IdStatut = 3,
                            Model = "autem",
                            NInventaire = "dolorem",
                            NSerie = "aliquid",
                            PrixUnitaireHT = 9,
                            RefAchat = "sed",
                            Remarques = "suscipit"
                        },
                        new
                        {
                            Id = 4,
                            DateAchat = new DateTime(2019, 8, 21, 19, 10, 40, 901, DateTimeKind.Local).AddTicks(9889),
                            EtatActuel = "eveniet",
                            IdCategorie = 10,
                            IdConstucteur = 8,
                            IdFournisseur = 4,
                            IdStatut = 8,
                            Model = "consequatur",
                            NInventaire = "voluptatem",
                            NSerie = "sequi",
                            PrixUnitaireHT = 4,
                            RefAchat = "quaerat",
                            Remarques = "voluptas"
                        },
                        new
                        {
                            Id = 5,
                            DateAchat = new DateTime(2020, 2, 14, 12, 42, 38, 192, DateTimeKind.Local).AddTicks(6639),
                            EtatActuel = "fugiat",
                            IdCategorie = 7,
                            IdConstucteur = 9,
                            IdFournisseur = 10,
                            IdStatut = 6,
                            Model = "molestias",
                            NInventaire = "debitis",
                            NSerie = "magni",
                            PrixUnitaireHT = 1,
                            RefAchat = "ut",
                            Remarques = "suscipit"
                        },
                        new
                        {
                            Id = 6,
                            DateAchat = new DateTime(2020, 2, 18, 11, 28, 41, 825, DateTimeKind.Local).AddTicks(183),
                            EtatActuel = "ut",
                            IdCategorie = 6,
                            IdConstucteur = 9,
                            IdFournisseur = 3,
                            IdStatut = 8,
                            Model = "at",
                            NInventaire = "minus",
                            NSerie = "recusandae",
                            PrixUnitaireHT = 10,
                            RefAchat = "qui",
                            Remarques = "quod"
                        },
                        new
                        {
                            Id = 7,
                            DateAchat = new DateTime(2019, 9, 7, 7, 29, 36, 322, DateTimeKind.Local).AddTicks(4616),
                            EtatActuel = "tenetur",
                            IdCategorie = 6,
                            IdConstucteur = 6,
                            IdFournisseur = 4,
                            IdStatut = 5,
                            Model = "omnis",
                            NInventaire = "reprehenderit",
                            NSerie = "maiores",
                            PrixUnitaireHT = 9,
                            RefAchat = "eligendi",
                            Remarques = "qui"
                        },
                        new
                        {
                            Id = 8,
                            DateAchat = new DateTime(2019, 12, 8, 22, 27, 43, 16, DateTimeKind.Local).AddTicks(7297),
                            EtatActuel = "sit",
                            IdCategorie = 9,
                            IdConstucteur = 3,
                            IdFournisseur = 1,
                            IdStatut = 4,
                            Model = "illum",
                            NInventaire = "recusandae",
                            NSerie = "unde",
                            PrixUnitaireHT = 10,
                            RefAchat = "similique",
                            Remarques = "excepturi"
                        },
                        new
                        {
                            Id = 9,
                            DateAchat = new DateTime(2019, 11, 13, 2, 19, 22, 652, DateTimeKind.Local).AddTicks(7151),
                            EtatActuel = "ipsum",
                            IdCategorie = 1,
                            IdConstucteur = 9,
                            IdFournisseur = 1,
                            IdStatut = 4,
                            Model = "odio",
                            NInventaire = "rem",
                            NSerie = "sunt",
                            PrixUnitaireHT = 1,
                            RefAchat = "eum",
                            Remarques = "deserunt"
                        },
                        new
                        {
                            Id = 10,
                            DateAchat = new DateTime(2020, 1, 22, 20, 24, 26, 416, DateTimeKind.Local).AddTicks(5425),
                            EtatActuel = "magnam",
                            IdCategorie = 10,
                            IdConstucteur = 5,
                            IdFournisseur = 5,
                            IdStatut = 3,
                            Model = "sit",
                            NInventaire = "vel",
                            NSerie = "sit",
                            PrixUnitaireHT = 1,
                            RefAchat = "non",
                            Remarques = "ea"
                        });
                });

            modelBuilder.Entity("Models.EquipementInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipementInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2019, 8, 24, 6, 6, 0, 394, DateTimeKind.Local).AddTicks(4115),
                            NSerie = "consequatur",
                            StringInfo = "dolores"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2019, 9, 1, 11, 55, 27, 964, DateTimeKind.Local).AddTicks(5661),
                            NSerie = "omnis",
                            StringInfo = "voluptas"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2020, 2, 22, 22, 55, 28, 352, DateTimeKind.Local).AddTicks(3371),
                            NSerie = "ut",
                            StringInfo = "sed"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2020, 4, 1, 2, 11, 42, 930, DateTimeKind.Local).AddTicks(406),
                            NSerie = "omnis",
                            StringInfo = "cupiditate"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2019, 7, 19, 15, 53, 32, 444, DateTimeKind.Local).AddTicks(8254),
                            NSerie = "recusandae",
                            StringInfo = "et"
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2020, 2, 27, 10, 36, 4, 175, DateTimeKind.Local).AddTicks(8588),
                            NSerie = "eveniet",
                            StringInfo = "ducimus"
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2020, 1, 24, 19, 51, 3, 124, DateTimeKind.Local).AddTicks(2092),
                            NSerie = "et",
                            StringInfo = "qui"
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2019, 8, 5, 22, 34, 15, 485, DateTimeKind.Local).AddTicks(5052),
                            NSerie = "placeat",
                            StringInfo = "sed"
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2019, 10, 8, 10, 56, 30, 906, DateTimeKind.Local).AddTicks(1261),
                            NSerie = "et",
                            StringInfo = "tempora"
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2020, 3, 17, 23, 18, 46, 318, DateTimeKind.Local).AddTicks(9420),
                            NSerie = "consequatur",
                            StringInfo = "molestiae"
                        });
                });

            modelBuilder.Entity("Models.Fonction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fonctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "omnis"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "est"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "ea"
                        },
                        new
                        {
                            Id = 4,
                            Nom = "ratione"
                        },
                        new
                        {
                            Id = 5,
                            Nom = "fugiat"
                        },
                        new
                        {
                            Id = 6,
                            Nom = "consequuntur"
                        },
                        new
                        {
                            Id = 7,
                            Nom = "rerum"
                        },
                        new
                        {
                            Id = 8,
                            Nom = "recusandae"
                        },
                        new
                        {
                            Id = 9,
                            Nom = "dolores"
                        },
                        new
                        {
                            Id = 10,
                            Nom = "et"
                        });
                });

            modelBuilder.Entity("Models.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Fournisseurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dj-m2x@hotmail.com",
                            Fax = "dolores",
                            Nom = "voluptatem",
                            Tel = "velit"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Anais_Leroux@yahoo.fr",
                            Fax = "quae",
                            Nom = "rem",
                            Tel = "dolorem"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Charlotte86@yahoo.fr",
                            Fax = "recusandae",
                            Nom = "quos",
                            Tel = "labore"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Nathan_Rolland2@yahoo.fr",
                            Fax = "error",
                            Nom = "omnis",
                            Tel = "sit"
                        },
                        new
                        {
                            Id = 5,
                            Email = "Ines95@yahoo.fr",
                            Fax = "quos",
                            Nom = "illum",
                            Tel = "non"
                        },
                        new
                        {
                            Id = 6,
                            Email = "Mathis.Fabre@yahoo.fr",
                            Fax = "consequatur",
                            Nom = "doloribus",
                            Tel = "laboriosam"
                        },
                        new
                        {
                            Id = 7,
                            Email = "Jules19@gmail.com",
                            Fax = "error",
                            Nom = "tempora",
                            Tel = "voluptas"
                        },
                        new
                        {
                            Id = 8,
                            Email = "Lucas.Garcia21@hotmail.fr",
                            Fax = "sit",
                            Nom = "exercitationem",
                            Tel = "autem"
                        },
                        new
                        {
                            Id = 9,
                            Email = "Kylian65@hotmail.fr",
                            Fax = "asperiores",
                            Nom = "in",
                            Tel = "temporibus"
                        },
                        new
                        {
                            Id = 10,
                            Email = "Noa.Adam0@hotmail.fr",
                            Fax = "non",
                            Nom = "in",
                            Tel = "dolorem"
                        });
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "inventore"
                        },
                        new
                        {
                            Id = 2,
                            Name = "nisi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "natus"
                        },
                        new
                        {
                            Id = 4,
                            Name = "perferendis"
                        },
                        new
                        {
                            Id = 5,
                            Name = "quis"
                        },
                        new
                        {
                            Id = 6,
                            Name = "fugit"
                        },
                        new
                        {
                            Id = 7,
                            Name = "sit"
                        },
                        new
                        {
                            Id = 8,
                            Name = "distinctio"
                        },
                        new
                        {
                            Id = 9,
                            Name = "et"
                        },
                        new
                        {
                            Id = 10,
                            Name = "accusantium"
                        });
                });

            modelBuilder.Entity("Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdDepartement")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDepartement");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdDepartement = 3,
                            Nom = "vitae"
                        },
                        new
                        {
                            Id = 2,
                            IdDepartement = 9,
                            Nom = "consequatur"
                        },
                        new
                        {
                            Id = 3,
                            IdDepartement = 1,
                            Nom = "laborum"
                        },
                        new
                        {
                            Id = 4,
                            IdDepartement = 6,
                            Nom = "hic"
                        },
                        new
                        {
                            Id = 5,
                            IdDepartement = 2,
                            Nom = "molestiae"
                        },
                        new
                        {
                            Id = 6,
                            IdDepartement = 9,
                            Nom = "ut"
                        },
                        new
                        {
                            Id = 7,
                            IdDepartement = 2,
                            Nom = "et"
                        },
                        new
                        {
                            Id = 8,
                            IdDepartement = 9,
                            Nom = "porro"
                        },
                        new
                        {
                            Id = 9,
                            IdDepartement = 10,
                            Nom = "sapiente"
                        },
                        new
                        {
                            Id = 10,
                            IdDepartement = 4,
                            Nom = "id"
                        });
                });

            modelBuilder.Entity("Models.Statut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "beatae",
                            Nom = "earum"
                        },
                        new
                        {
                            Id = 2,
                            Description = "velit",
                            Nom = "eos"
                        },
                        new
                        {
                            Id = 3,
                            Description = "animi",
                            Nom = "vel"
                        },
                        new
                        {
                            Id = 4,
                            Description = "dolore",
                            Nom = "qui"
                        },
                        new
                        {
                            Id = 5,
                            Description = "illum",
                            Nom = "ratione"
                        },
                        new
                        {
                            Id = 6,
                            Description = "quae",
                            Nom = "et"
                        },
                        new
                        {
                            Id = 7,
                            Description = "est",
                            Nom = "et"
                        },
                        new
                        {
                            Id = 8,
                            Description = "sit",
                            Nom = "sunt"
                        },
                        new
                        {
                            Id = 9,
                            Description = "quia",
                            Nom = "sunt"
                        },
                        new
                        {
                            Id = 10,
                            Description = "animi",
                            Nom = "error"
                        });
                });

            modelBuilder.Entity("Models.TicketSupport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCollaborateur")
                        .HasColumnType("int");

                    b.Property<string>("Priorite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCollaborateur");

                    b.ToTable("TicketSupports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreation = new DateTime(2019, 10, 26, 15, 29, 16, 432, DateTimeKind.Local).AddTicks(3138),
                            IdCollaborateur = 9,
                            Priorite = "facilis",
                            Question = "error"
                        },
                        new
                        {
                            Id = 2,
                            DateCreation = new DateTime(2019, 9, 24, 11, 24, 6, 435, DateTimeKind.Local).AddTicks(3027),
                            IdCollaborateur = 8,
                            Priorite = "reprehenderit",
                            Question = "et"
                        },
                        new
                        {
                            Id = 3,
                            DateCreation = new DateTime(2019, 12, 10, 22, 9, 33, 933, DateTimeKind.Local).AddTicks(2179),
                            IdCollaborateur = 3,
                            Priorite = "doloremque",
                            Question = "cumque"
                        },
                        new
                        {
                            Id = 4,
                            DateCreation = new DateTime(2020, 4, 10, 18, 52, 55, 421, DateTimeKind.Local).AddTicks(6327),
                            IdCollaborateur = 8,
                            Priorite = "voluptas",
                            Question = "accusamus"
                        },
                        new
                        {
                            Id = 5,
                            DateCreation = new DateTime(2019, 9, 12, 3, 48, 50, 244, DateTimeKind.Local).AddTicks(5451),
                            IdCollaborateur = 3,
                            Priorite = "ea",
                            Question = "provident"
                        },
                        new
                        {
                            Id = 6,
                            DateCreation = new DateTime(2019, 9, 15, 5, 4, 53, 93, DateTimeKind.Local).AddTicks(7896),
                            IdCollaborateur = 8,
                            Priorite = "id",
                            Question = "neque"
                        },
                        new
                        {
                            Id = 7,
                            DateCreation = new DateTime(2019, 7, 19, 13, 50, 58, 28, DateTimeKind.Local).AddTicks(8542),
                            IdCollaborateur = 2,
                            Priorite = "dolorum",
                            Question = "corrupti"
                        },
                        new
                        {
                            Id = 8,
                            DateCreation = new DateTime(2019, 6, 15, 14, 1, 0, 624, DateTimeKind.Local).AddTicks(4214),
                            IdCollaborateur = 8,
                            Priorite = "dolorem",
                            Question = "molestiae"
                        },
                        new
                        {
                            Id = 9,
                            DateCreation = new DateTime(2020, 4, 6, 0, 12, 47, 298, DateTimeKind.Local).AddTicks(6872),
                            IdCollaborateur = 5,
                            Priorite = "et",
                            Question = "voluptas"
                        },
                        new
                        {
                            Id = 10,
                            DateCreation = new DateTime(2019, 6, 21, 6, 10, 26, 532, DateTimeKind.Local).AddTicks(5349),
                            IdCollaborateur = 10,
                            Priorite = "sed",
                            Question = "rerum"
                        });
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeOfVerification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<int>("IdFonction")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdService")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdFonction");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdService");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodeOfVerification = "ut",
                            Email = "dj-m2x@hotmail.com",
                            EmailVerified = true,
                            IdFonction = 9,
                            IdRole = 8,
                            IdService = 10,
                            IsActive = true,
                            Matricule = "minima",
                            Nom = "possimus",
                            Password = "123",
                            Prenom = "nemo"
                        },
                        new
                        {
                            Id = 2,
                            CodeOfVerification = "dolorem",
                            Email = "Melissa10@gmail.com",
                            EmailVerified = true,
                            IdFonction = 1,
                            IdRole = 4,
                            IdService = 8,
                            IsActive = true,
                            Matricule = "sit",
                            Nom = "cum",
                            Password = "123",
                            Prenom = "vel"
                        },
                        new
                        {
                            Id = 3,
                            CodeOfVerification = "sed",
                            Email = "Maelys.Meyer69@hotmail.fr",
                            EmailVerified = false,
                            IdFonction = 9,
                            IdRole = 10,
                            IdService = 3,
                            IsActive = false,
                            Matricule = "aut",
                            Nom = "fugit",
                            Password = "123",
                            Prenom = "nam"
                        },
                        new
                        {
                            Id = 4,
                            CodeOfVerification = "repellendus",
                            Email = "Louna14@yahoo.fr",
                            EmailVerified = false,
                            IdFonction = 6,
                            IdRole = 7,
                            IdService = 4,
                            IsActive = true,
                            Matricule = "corrupti",
                            Nom = "officia",
                            Password = "123",
                            Prenom = "at"
                        },
                        new
                        {
                            Id = 5,
                            CodeOfVerification = "ut",
                            Email = "Zoe63@gmail.com",
                            EmailVerified = true,
                            IdFonction = 7,
                            IdRole = 4,
                            IdService = 9,
                            IsActive = true,
                            Matricule = "eaque",
                            Nom = "dignissimos",
                            Password = "123",
                            Prenom = "dolor"
                        },
                        new
                        {
                            Id = 6,
                            CodeOfVerification = "omnis",
                            Email = "Victor87@yahoo.fr",
                            EmailVerified = true,
                            IdFonction = 10,
                            IdRole = 9,
                            IdService = 2,
                            IsActive = true,
                            Matricule = "ullam",
                            Nom = "optio",
                            Password = "123",
                            Prenom = "voluptas"
                        },
                        new
                        {
                            Id = 7,
                            CodeOfVerification = "omnis",
                            Email = "Rayan7@gmail.com",
                            EmailVerified = false,
                            IdFonction = 8,
                            IdRole = 10,
                            IdService = 3,
                            IsActive = false,
                            Matricule = "voluptatem",
                            Nom = "aut",
                            Password = "123",
                            Prenom = "aut"
                        },
                        new
                        {
                            Id = 8,
                            CodeOfVerification = "aliquid",
                            Email = "Marie.Renault@gmail.com",
                            EmailVerified = false,
                            IdFonction = 5,
                            IdRole = 6,
                            IdService = 4,
                            IsActive = false,
                            Matricule = "est",
                            Nom = "aliquam",
                            Password = "123",
                            Prenom = "ut"
                        },
                        new
                        {
                            Id = 9,
                            CodeOfVerification = "nisi",
                            Email = "Julie_Gautier35@yahoo.fr",
                            EmailVerified = true,
                            IdFonction = 7,
                            IdRole = 6,
                            IdService = 1,
                            IsActive = true,
                            Matricule = "eaque",
                            Nom = "corrupti",
                            Password = "123",
                            Prenom = "consequatur"
                        },
                        new
                        {
                            Id = 10,
                            CodeOfVerification = "blanditiis",
                            Email = "Quentin_Picard1@yahoo.fr",
                            EmailVerified = true,
                            IdFonction = 10,
                            IdRole = 2,
                            IdService = 4,
                            IsActive = true,
                            Matricule = "pariatur",
                            Nom = "quibusdam",
                            Password = "123",
                            Prenom = "quia"
                        });
                });

            modelBuilder.Entity("Models.Affectation", b =>
                {
                    b.HasOne("Models.User", "AgentSi")
                        .WithMany("AgentSiAffectations")
                        .HasForeignKey("IdAgentSi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.User", "Collaborateur")
                        .WithMany("CollaborateurAffectations")
                        .HasForeignKey("IdCollaborateur")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Emplacement", "Emplacement")
                        .WithMany("EmplacementAffectations")
                        .HasForeignKey("IdEmplacement")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Equipement", "Equipement")
                        .WithMany("EquipementAffectations")
                        .HasForeignKey("IdEquipement")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.HasOne("Models.User", "Receiver")
                        .WithMany("ReceiverChats")
                        .HasForeignKey("IdReceiver")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.User", "Sender")
                        .WithMany("SenderChats")
                        .HasForeignKey("IdSender")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.TicketSupport", "TicketSupport")
                        .WithMany("TicketSupportChats")
                        .HasForeignKey("IdTicketSupport")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Emplacement", b =>
                {
                    b.HasOne("Models.Departement", "Departement")
                        .WithMany("DepartementEmplacements")
                        .HasForeignKey("IdDepartement")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Equipement", b =>
                {
                    b.HasOne("Models.Categorie", "Categorie")
                        .WithMany("CategorieEquipements")
                        .HasForeignKey("IdCategorie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Constucteur", "Constucteur")
                        .WithMany("ConstucteurEquipements")
                        .HasForeignKey("IdConstucteur")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Fournisseur", "Fournisseur")
                        .WithMany("FournisseurEquipements")
                        .HasForeignKey("IdFournisseur")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Statut", "Statut")
                        .WithMany("StatutEquipements")
                        .HasForeignKey("IdStatut")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Service", b =>
                {
                    b.HasOne("Models.Departement", "Departement")
                        .WithMany("DepartementServices")
                        .HasForeignKey("IdDepartement")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.TicketSupport", b =>
                {
                    b.HasOne("Models.User", "Collaborateur")
                        .WithMany("CollaborateurTicketSupports")
                        .HasForeignKey("IdCollaborateur")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.HasOne("Models.Fonction", "Fonction")
                        .WithMany("FonctionCollaborateurs")
                        .HasForeignKey("IdFonction")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Models.Service", "Service")
                        .WithMany("ServiceCollaborateurs")
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
